/*
 * Copyright (c) 2024-2025 Cypress Semiconductor Corporation (an Infineon company)
 * or an affiliate of Cypress Semiconductor Corporation. All rights reserved.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 *
 */

#ifndef CONFIG_TFM_TARGET_H
#define CONFIG_TFM_TARGET_H

#ifdef IFX_PROJECT_CONFIG_PATH
/* Include project specific configuration header */
#include IFX_PROJECT_CONFIG_PATH
#endif

#if DOMAIN_S
#include "ifx_spe_config.h"
#endif

#ifdef IFX_BSP_CONFIG_HEADER_FILE
/* Include configuration provided by BSP */
#include IFX_BSP_CONFIG_HEADER_FILE
#endif

#if IFX_PRINT_CORE_PREFIX
#ifndef IFX_STDIO_S_PREFIX
/* Prefix used to separate message from secure CM33 code generated by stdio_output_string */
#define IFX_STDIO_S_PREFIX                      "$S33$"
#endif
#ifndef IFX_STDIO_NS_CM33_PREFIX
/* Prefix used to separate message from non-secure CM33 code generated by stdio_output_string */
#define IFX_STDIO_NS_CM33_PREFIX                "$N33$"
#endif

#if DOMAIN_S && defined(IFX_STDIO_S_PREFIX)
#define IFX_STDIO_PREFIX    IFX_STDIO_S_PREFIX
#elif DOMAIN_NS && defined(IFX_STDIO_NS_CM33_PREFIX)
#define IFX_STDIO_PREFIX    IFX_STDIO_NS_CM33_PREFIX
#endif
#endif /* IFX_PRINT_CORE_PREFIX */

#ifndef ITS_BUF_SIZE
/*
 * Size of the ITS internal data transfer buffer
 * (Default to the max asset size so that all requests can be handled in one iteration.)
 * It should speed up operations and reduce number of erase cycles.
 */
#define ITS_BUF_SIZE                            ITS_MAX_ASSET_SIZE
#endif

#if defined(TEST_NS_IFX_IRQ_TEST_MASKED) && (TEST_NS_IFX_IRQ_TEST_MASKED == 1)
/* Mask Non-Secure interrupts when executing in secure state */
#define CONFIG_TFM_SECURE_THREAD_MASK_NS_INTERRUPT          1
#elif defined(TEST_NS_IFX_IRQ_TEST_UNMASKED) && (TEST_NS_IFX_IRQ_TEST_UNMASKED == 1)
/* Do not mask Non-Secure interrupts when executing in secure state. */
#define CONFIG_TFM_SECURE_THREAD_MASK_NS_INTERRUPT          0
#endif /* defined(TEST_NS_IFX_IRQ_TEST_MASKED) && (TEST_NS_IFX_IRQ_TEST_MASKED == 1) */

#endif /* CONFIG_TFM_TARGET_H */
